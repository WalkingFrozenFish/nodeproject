// npm install npm@latest -g 
// Обновление до последней версии npm

// npm -v
// Проверка версии npm

// npm install express
// Установка внешнего модуля, в данном случае express


// Подключение модуля express
const express = require('express')
// Создаем объект приложения
const app = express()

// Установка обработчика для маршрута "/"
// Для обработки запросов, используется метод приложения app.get()

// Первый параметр, это путь, а второй, это функция обработчик, которая будет обрабатывать
// запрос, поступивший на данном пути
app.get('/', function (request, response) {
    response.end('Hello from Express!')
})
// Для прослушивания подключений, вызываем метод listen у приложения app, 
// куда передаем номер порта 
app.listen(3000)

// При переходе на http://localhost:3000, мы получаем ответ от сервера 'Hello from Express!'

// Файл package.json содержит информацию о всех подключенных модулях в проекте
// Для установки всех модулей для проекта, используется команда npm install
// Данная команда загрузит все модули, определенные в файле package.json


// Для удаления модуля из папки с модулями, используется команда npm uninstall NODE_MODULE_NAME
// Но модуль будет записан в файле package.json
// Для полного удаления модуля и упоминания его в файле package.json
// используется команда npm uninstall NODE_MODULE_NAME --save


// Семантическое версионирование - major.minor.patch
// Если в пакете найден и исправлен баг то идет увеличение числа patch
// Если добавлена некоторая функциональность, которая совместима с предыдущей версией пакета, то идет увеличени числа minor
// Если вносятся большие изменения которые не совместимы со старой версией, то идет увеличение major
// То есть 4.14.0 - 4 major, 14 minor, 0 patch


// Npm так же позволяет определять команды для выполнения определенных действий. Данные команды определяются в файле package.json, данных команд может быть много
// Объявляем секцию "scripts", где помещаем команды.
// В данном случае, start это команда которая выполняет код в файле
// Вторая команда так же выполняет код в файле, но так же передает два параметра
// Команды можно называть как угодно, но есть список зарезервированных слов

// "scripts": {
//    "start": "node FILE_NAME",
//    "dev": "node FILE_NAME Tom 26"
//  }


// Для запуска команды используется данная конструкция
// npm COMMAND_NAME

// К примеру для запуска
// npm start

// Для запуска команд с другими названиями используется другая конструкция
// npm run dev
